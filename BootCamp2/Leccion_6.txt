üìò Lecci√≥n 6 ‚Äî Editar usuario (editar.php)

Parte A ‚Äî C√≥digo limpio

<?php
require_once "conexion.php";

/* 1) Validar par√°metro id */
$id = isset($_GET["id"]) ? (int)$_GET["id"] : 0;
if ($id <= 0) {
    die("ID inv√°lido.");
}

/* 2) Obtener datos actuales del usuario */
$usuario = null;
$sql_sel = "SELECT id, nombre, correo FROM usuarios WHERE id = ?";
$sentencia_sel = $conexion->prepare($sql_sel);
if (!$sentencia_sel) { die("Error al preparar la consulta: " . $conexion->error); }
$sentencia_sel->bind_param("i", $id);
$sentencia_sel->execute();
$resultado_sel = $sentencia_sel->get_result();
if ($resultado_sel && $resultado_sel->num_rows === 1) {
    $usuario = $resultado_sel->fetch_assoc();
} else {
    die("Usuario no encontrado.");
}
$sentencia_sel->close();

/* 3) Procesar env√≠o de formulario (POST) */
$mensaje = "";
if ($_SERVER["REQUEST_METHOD"] === "POST") {
    $nombre            = trim($_POST["nombre"] ?? "");
    $correo            = trim($_POST["correo"] ?? "");
    $contrasena_nueva  = $_POST["contrasena_nueva"] ?? ""; // opcional

    if ($nombre === "" || $correo === "") {
        $mensaje = "Nombre y correo son obligatorios.";
    } elseif (!filter_var($correo, FILTER_VALIDATE_EMAIL)) {
        $mensaje = "El correo no es v√°lido.";
    } else {
        if ($contrasena_nueva !== "") {
            $contrasena_hash = password_hash($contrasena_nueva, PASSWORD_DEFAULT);
            $sql_up = "UPDATE usuarios
                       SET nombre = ?, correo = ?, contrasena_hash = ?
                       WHERE id = ?";
            $sentencia_up = $conexion->prepare($sql_up);
            if (!$sentencia_up) {
                $mensaje = "Error al preparar actualizaci√≥n: " . $conexion->error;
            } else {
                $sentencia_up->bind_param("sssi", $nombre, $correo, $contrasena_hash, $id);
                if ($sentencia_up->execute()) {
                    $mensaje = "Usuario actualizado (incluye nueva contrase√±a).";
                    $usuario["nombre"] = $nombre;
                    $usuario["correo"] = $correo;
                } else {
                    if ($conexion->errno === 1062) {
                        $mensaje = "El correo ya est√° registrado en otro usuario.";
                    } else {
                        $mensaje = "Error al actualizar: " . $conexion->error;
                    }
                }
                $sentencia_up->close();
            }
        } else {
            $sql_up = "UPDATE usuarios
                       SET nombre = ?, correo = ?
                       WHERE id = ?";
            $sentencia_up = $conexion->prepare($sql_up);
            if (!$sentencia_up) {
                $mensaje = "Error al preparar actualizaci√≥n: " . $conexion->error;
            } else {
                $sentencia_up->bind_param("ssi", $nombre, $correo, $id);
                if ($sentencia_up->execute()) {
                    $mensaje = "Usuario actualizado.";
                    $usuario["nombre"] = $nombre;
                    $usuario["correo"] = $correo;
                } else {
                    if ($conexion->errno === 1062) {
                        $mensaje = "El correo ya est√° registrado en otro usuario.";
                    } else {
                        $mensaje = "Error al actualizar: " . $conexion->error;
                    }
                }
                $sentencia_up->close();
            }
        }
    }
}
?>
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Editar usuario</title>
  <link rel="stylesheet" href="estilo.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <h1>Editar usuario</h1>

  <?php if ($mensaje !== ""): ?>
    <p class="mensaje"><?= htmlspecialchars($mensaje) ?></p>
  <?php endif; ?>

  <form method="post" action="editar.php?id=<?= (int)$usuario['id'] ?>" novalidate>
    <label for="nombre">Nombre</label>
    <input id="nombre" name="nombre" type="text" required maxlength="100"
           value="<?= htmlspecialchars($usuario['nombre']) ?>">

    <label for="correo">Correo</label>
    <input id="correo" name="correo" type="email" required maxlength="120"
           value="<?= htmlspecialchars($usuario['correo']) ?>">

    <label for="contrasena_nueva">Contrase√±a nueva (opcional)</label>
    <input id="contrasena_nueva" name="contrasena_nueva" type="password" minlength="6"
           placeholder="D√©jalo vac√≠o para no cambiarla">

    <button type="submit">Guardar cambios</button>
    <a href="privado.php">Volver</a>
  </form>
</body>
</html>

Parte B ‚Äî Explicaci√≥n l√≠nea por l√≠nea

1) Encabezado y validaci√≥n de id
	‚Ä¢	require_once "conexion.php";
Carga la conexi√≥n a MySQL y la sesi√≥n. Habilita $conexion y $_SESSION.
	‚Ä¢	$id = isset($_GET["id"]) ? (int)$_GET["id"] : 0;
Lee el par√°metro id desde la URL. Convierte a entero. Si no viene, usa 0.
	‚Ä¢	if ($id <= 0) { die("ID inv√°lido."); }
Rechaza identificadores nulos, negativos o no num√©ricos. die() detiene la ejecuci√≥n y muestra el texto.

2) Carga de datos del usuario
	‚Ä¢	$sql_sel = "SELECT id, nombre, correo FROM usuarios WHERE id = ?";
Consulta parametrizada para traer solo el usuario con ese id.
	‚Ä¢	$sentencia_sel = $conexion->prepare($sql_sel);
Prepara la consulta en el servidor. Devuelve un objeto de sentencia o false.
	‚Ä¢	$sentencia_sel->bind_param("i", $id);
Enlaza el par√°metro id como entero ("i").
	‚Ä¢	$sentencia_sel->execute();
Ejecuta la sentencia preparada.
	‚Ä¢	$resultado_sel = $sentencia_sel->get_result();
Obtiene el conjunto de resultados.
	‚Ä¢	if ($resultado_sel && $resultado_sel->num_rows === 1) { ... } else { die("Usuario no encontrado."); }
Exige exactamente una fila hallada. Si no, detiene la ejecuci√≥n.
	‚Ä¢	$usuario = $resultado_sel->fetch_assoc();
Convierte la fila en arreglo asociativo: claves id, nombre, correo.
	‚Ä¢	$sentencia_sel->close();
Libera recursos de la sentencia.

3) Procesamiento del formulario (POST)
	‚Ä¢	$mensaje = "";
Variable de retroalimentaci√≥n para el usuario.
	‚Ä¢	if ($_SERVER["REQUEST_METHOD"] === "POST") { ... }
Solo procesa cuando el formulario fue enviado por m√©todo POST.
	‚Ä¢	$nombre = trim($_POST["nombre"] ?? "");
Lee nombre y recorta espacios en blanco al inicio y al final.
	‚Ä¢	$correo = trim($_POST["correo"] ?? "");
Igual, para correo.
	‚Ä¢	$contrasena_nueva = $_POST["contrasena_nueva"] ?? "";
Lee la posible nueva contrase√±a. Puede venir vac√≠a.
	‚Ä¢	if ($nombre === "" || $correo === "")
Valida campos obligatorios.
	‚Ä¢	elseif (!filter_var($correo, FILTER_VALIDATE_EMAIL))
Verifica formato de correo con el filtro nativo.
	‚Ä¢	Rama con cambio de contrase√±a
	‚Ä¢	$contrasena_hash = password_hash($contrasena_nueva, PASSWORD_DEFAULT);
Genera un hash seguro para la nueva contrase√±a.
	‚Ä¢	UPDATE usuarios SET nombre=?, correo=?, contrasena_hash=? WHERE id=?
Actualiza nombre, correo y contrase√±a.
	‚Ä¢	bind_param("sssi", $nombre, $correo, $contrasena_hash, $id);
Enlaza tres textos y un entero.
	‚Ä¢	if ($sentencia_up->execute()) { ... } else { ... }
Ejecuta y eval√∫a:
C√≥digo 1062 ‚Üí correo duplicado por √≠ndice UNIQUE.
Otros errores ‚Üí mensaje con $conexion->error.
	‚Ä¢	Rama sin cambio de contrase√±a
	‚Ä¢	UPDATE usuarios SET nombre=?, correo=? WHERE id=?
Solo actualiza datos p√∫blicos.
	‚Ä¢	bind_param("ssi", $nombre, $correo, $id);
Enlaza dos textos y un entero.
	‚Ä¢	Manejo de √©xito y errores igual que la rama anterior.
	‚Ä¢	Tras actualizar, se refrescan los valores en $usuario para que el formulario muestre lo √∫ltimo.

4) Documento HTML y formulario
	‚Ä¢	<!DOCTYPE html>, <html lang="es">, <meta charset="UTF-8">
Declaran HTML5, idioma espa√±ol y codificaci√≥n UTF-8.
	‚Ä¢	<link rel="stylesheet" href="estilo.css">
Aplica estilos externos.
	‚Ä¢	<?php if ($mensaje !== ""): ?> ... <?php endif; ?>
Bloque condicional que imprime el mensaje si existe.
	‚Ä¢	<form method="post" action="editar.php?id=<?= (int)$usuario['id'] ?>" novalidate>
Env√≠o por POST al mismo archivo. El id permanece en la URL. novalidate evita bloqueos de la validaci√≥n nativa durante la pr√°ctica.
	‚Ä¢	value="<?= htmlspecialchars($usuario['nombre']) ?>"
Precarga el campo con el valor actual. htmlspecialchars evita inyecci√≥n de HTML.
	‚Ä¢	Campo Contrase√±a nueva (opcional)
Si se deja vac√≠o, no cambia la contrase√±a. Si se llena, se re-hashea y reemplaza.
	‚Ä¢	Bot√≥n Guardar cambios y enlace Volver a privado.php.

üîç Pruebas m√≠nimas
	1.	En privado.php, clic en Editar de un usuario.
	2.	Cambiar nombre y guardar. Debe mostrar ‚ÄúUsuario actualizado.‚Äù
	3.	Cambiar correo a uno ya existente. Debe mostrar ‚ÄúEl correo ya est√° registrado en otro usuario.‚Äù
	4.	Cambiar contrase√±a llenando ‚ÄúContrase√±a nueva‚Äù. Debe mostrar ‚ÄúUsuario actualizado (incluye nueva contrase√±a).‚Äù
	5.	Probar con id inv√°lido en la URL: editar.php?id=0 ‚Üí ‚ÄúID inv√°lido.‚Äù
